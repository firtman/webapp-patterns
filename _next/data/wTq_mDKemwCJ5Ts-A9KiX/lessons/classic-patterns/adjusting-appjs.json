{"pageProps":{"post":{"attributes":{},"html":"<p>Now go back go <code>classes/app.js</code> and adjust the code so we can use the Command design pattern and see the web app in action again.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TodoList</span>, <span class=\"hljs-title class_\">TodoItem</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./webapp/classes.js&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CommandExecutor</span>, <span class=\"hljs-title class_\">Command</span>, <span class=\"hljs-title class_\">Commands</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./webapp/command.js&#x27;</span>\n\nglobalThis.<span class=\"hljs-property\">DOM</span> = {};\n\n<span class=\"hljs-comment\">// easy access within this file</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DOM</span> = globalThis.<span class=\"hljs-property\">DOM</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">renderList</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> todos = <span class=\"hljs-title class_\">TodoList</span>.<span class=\"hljs-title function_\">getInstance</span>();\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">todoList</span>.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;&quot;</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> todo <span class=\"hljs-keyword\">of</span> todos.<span class=\"hljs-property\">items</span>) {\n        <span class=\"hljs-keyword\">const</span> listItem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&#x27;li&#x27;</span>);\n        listItem.<span class=\"hljs-property\">className</span> = <span class=\"hljs-string\">&#x27;todo-item&#x27;</span>;\n        listItem.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${todo.text}</span> \n                &lt;button class=&quot;delete-btn&quot;&gt;Delete&lt;/button&gt;`</span>;\n        listItem.<span class=\"hljs-property\">dataset</span>.<span class=\"hljs-property\">text</span> = todo.<span class=\"hljs-property\">text</span>;\n        <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">todoList</span>.<span class=\"hljs-title function_\">appendChild</span>(listItem);\n    }\n\n}\n\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;DOMContentLoaded&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// Create references we will need later</span>\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">todoList</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;todo-list&#x27;</span>);\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">addBtn</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;add-btn&#x27;</span>);\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">todoInput</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;todo-input&#x27;</span>);\n\n    <span class=\"hljs-comment\">// Event listeners</span>\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">addBtn</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> cmd = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Command</span>(<span class=\"hljs-title class_\">Commands</span>.<span class=\"hljs-property\">ADD</span>);\n        <span class=\"hljs-title class_\">CommandExecutor</span>.<span class=\"hljs-title function_\">execute</span>(cmd);\n    });\n\n    <span class=\"hljs-variable constant_\">DOM</span>.<span class=\"hljs-property\">todoList</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (event.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">&#x27;delete-btn&#x27;</span>)) {\n            <span class=\"hljs-keyword\">const</span> todo = event.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">parentNode</span>.<span class=\"hljs-property\">dataset</span>.<span class=\"hljs-property\">text</span>;\n            <span class=\"hljs-keyword\">const</span> cmd = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Command</span>(<span class=\"hljs-title class_\">Commands</span>.<span class=\"hljs-property\">DELETE</span>, [todo]);\n            <span class=\"hljs-title class_\">CommandExecutor</span>.<span class=\"hljs-title function_\">execute</span>(cmd);\n        }\n    });\n\n    <span class=\"hljs-comment\">// Rendering on DOM content loaded, and when the list changes</span>\n    <span class=\"hljs-title function_\">renderList</span>();\n    <span class=\"hljs-title class_\">TodoList</span>.<span class=\"hljs-title function_\">getInstance</span>().<span class=\"hljs-title function_\">addObserver</span>(renderList);\n});\n</code></pre>\n","slug":"adjusting-appjs","title":"Adjusting Appjs","section":"Classic Patterns","icon":"tachometer-alt","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM2024/WebAppPatterns/companion-src/lessons/02-classic-patterns/F-adjusting-appjs.md","nextSlug":"/webapp-patterns/lessons/classic-patterns/adding-storage","prevSlug":"/webapp-patterns/lessons/classic-patterns/the-command-pattern"}},"__N_SSG":true}