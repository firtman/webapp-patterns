{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"serving-files-with-network-first-policy\">Serving Files with Network-First Policy</h1>\n<p>Let&#39;s replace the <code>fetch</code> event handler in <code>serviceworker.js</code> to use now the algorithm known as Network first.</p>\n<pre><code class=\"hljs language-js\">self.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;fetch&quot;</span>, <span class=\"hljs-keyword\">async</span> event =&gt; {\n    event.<span class=\"hljs-title function_\">respondWith</span>(\n\n        (<span class=\"hljs-keyword\">async</span> () =&gt; {\n            <span class=\"hljs-keyword\">try</span> {\n                <span class=\"hljs-keyword\">const</span> fetchResponse = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(event.<span class=\"hljs-property\">request</span>);\n                <span class=\"hljs-keyword\">return</span> fetchResponse;\n            } <span class=\"hljs-keyword\">catch</span> (e) {\n                <span class=\"hljs-keyword\">const</span> cachedResponse = <span class=\"hljs-keyword\">await</span> caches.<span class=\"hljs-title function_\">match</span>(event.<span class=\"hljs-property\">request</span>);\n                <span class=\"hljs-keyword\">if</span> (cachedResponse) <span class=\"hljs-keyword\">return</span> cachedResponse;\n            }\n        })()\n\n    );\n});\n</code></pre>\n","slug":"serving-files-with-network-first","title":"Serving Files with Network First","section":"Cache Storage","icon":"file-code","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM/DataStorage/browser-storage/lessons/04-cache-storage/E-serving-files-with-network-first.md","nextSlug":"/browser-storage/lessons/file-system/setup-import-and-export","prevSlug":"/browser-storage/lessons/cache-storage/caching-app-shell"}},"__N_SSG":true}